// Code generated by hertz generator.

package api

import (
	"context"
	"douyin_rpc/server/cmd/api/global"
	"douyin_rpc/server/cmd/api/kitex_gen/video"
	"time"

	api "douyin_rpc/server/cmd/api/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// Feed
// @Summary 视频推流
// @Tags feed
// @version 1.0
// @Accept application/x-json-stream
// @Param latest_time query int false "用户id"
// @Param token query string false "token"
// @Success 200 object video.FeedResponse 成功后返回值
// @Failure 409 object video.FeedResponse 失败后返回值
// @Router /douyin/feed/ [get]
// @router /douyin/feed/ [get]
func Feed(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.FeedRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	parse, err := time.Parse("2006-01-02 15:04:05", req.LatestTime)
	if err != nil {
		return
	}
	resp, err := global.VideoClient.Feed(ctx, &video.FeedRequest{
		AuthId:     value.(int64),
		LatestTime: parse.Unix(),
	})
	if err != nil {
		return
	}
	//resp := new(api.FeedResponse)

	c.JSON(consts.StatusOK, resp)
}
