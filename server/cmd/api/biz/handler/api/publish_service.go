// Code generated by hertz generator.

package api

import (
	"context"
	"douyin_rpc/server/cmd/api/global"
	"douyin_rpc/server/cmd/api/kitex_gen/video"

	api "douyin_rpc/server/cmd/api/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// PublishAction
// @Summary 发布视频
// @Tags 发布
// @version 1.0
// @Accept application/x-json-stream
// @Param token formData string true "token"
// @Param data formData file true "视频"
// @Param title formData string true "标题"
// @Success 200 object api.PublishActionResponse 成功后返回值
// @Failure 409 object api.PublishActionResponse 失败后返回值
// @Router /douyin/publish/action/ [post]
// @router /douyin/publish/action/ [POST]
func PublishAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.PublishActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	resp, err := global.VideoClient.PublishAction(ctx, &video.PublishActionRequest{
		Data:   req.Data,
		AuthId: value.(int64),
		Title:  req.Title,
	})
	if err != nil {
		return
	}
	//resp := new(api.PublishActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// PublishList
// @Summary 获取发布视频列表
// @Tags 发布
// @version 1.0
// @Accept application/x-json-stream
// @Param user_id query int true "用户id"
// @Param token query string true "token"
// @Success 200 object api.PublishListResponse 成功后返回值
// @Failure 409 object api.PublishListResponse 失败后返回值
// @Router /douyin/publish/list/ [get]
// @router /douyin/publish/list/ [GET]
func PublishList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.PublishListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	resp, err := global.VideoClient.PublishList(ctx, &video.PublishListRequest{
		AuthId: value.(int64),
		UserId: req.UserID,
	})
	if err != nil {
		return
	}
	//resp := new(api.PublishActionResponse)

	c.JSON(consts.StatusOK, resp)
}
