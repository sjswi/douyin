// Code generated by hertz generator.

package api

import (
	"context"
	"douyin_rpc/server/cmd/api/global"
	"douyin_rpc/server/cmd/api/kitex_gen/message"

	api "douyin_rpc/server/cmd/api/biz/model/api"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// MessageAction .
// @router /douyin/message/action/ [POST]
func MessageAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.MessageActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	resp, err := global.MessageClient.MessageAction(ctx, &message.MessageActionRequest{
		ToUserId:   req.ToUserID,
		AuthId:     value.(int64),
		ActionType: req.ActionType,
		Content:    req.Content,
	})
	if err != nil {
		return
	}
	//resp := new(api.MessageActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// MessageList .
// @router /douyin/message/list/ [GET]
func MessageList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.MessageListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	resp, err := global.MessageClient.MessageList(ctx, &message.MessageListRequest{
		AuthId:   value.(int64),
		ToUserId: req.ToUserID,
	})
	if err != nil {
		return
	}
	//resp := new(api.MessageListResponse)

	c.JSON(consts.StatusOK, resp)
}
