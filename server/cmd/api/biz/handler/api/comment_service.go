// Code generated by hertz generator.

package api

import (
	"context"
	api "douyin_rpc/server/cmd/api/biz/model/api"
	"douyin_rpc/server/cmd/api/global"
	"douyin_rpc/server/cmd/api/kitex_gen/comment"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CommentAction .
// @router /douyin/comment/action/ [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	resp, err := global.CommentClient.CommentAction(ctx, &comment.CommentActionRequest{
		VideoId:     req.VideoID,
		AuthId:      value.(int64),
		ActionType:  req.ActionType,
		CommentText: req.CommentText,
		CommentId:   req.CommentID,
	})
	if err != nil {
		return
	}
	//resp := new(api.CommentActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentList .
// @router /douyin/comment/list/ [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	//authID, err := strconv.Atoi(c.Get("accountID"))

	resp, err := global.CommentClient.CommentList(ctx, &comment.CommentListRequest{
		AuthId: value.(int64),
		UserId: req.UserID,
	})
	if err != nil {
		return
	}
	//resp := new(api.CommentListResponse)

	c.JSON(consts.StatusOK, resp)
}
