// Code generated by hertz generator.

package api

import (
	"context"
	api "douyin_rpc/server/cmd/api/biz/model/api"
	"douyin_rpc/server/cmd/api/global"
	"douyin_rpc/server/cmd/api/kitex_gen/comment"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CommentAction
// @Summary 评论操作，删除或增加
// @Tags 评论
// @version 1.0
// @Accept application/x-json-stream
// @Param video_id query int true "视频id"
// @Param token query string true "token"
// @Param action_type query int true "操作类型"
// @Param comment_text query string false "评论内容"
// @Param comment_id query int false "评论id"
// @Success 200 object api.CommentActionResponse 成功后返回值
// @Failure 409 object api.CommentActionResponse 失败后返回值
// @Router /douyin/comment/action/ [post]
// @router /douyin/comment/action/ [post]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	resp, err := global.CommentClient.CommentAction(ctx, &comment.CommentActionRequest{
		VideoId:     req.VideoID,
		AuthId:      value.(int64),
		ActionType:  req.ActionType,
		CommentText: req.CommentText,
		CommentId:   req.CommentID,
	})
	if err != nil {
		return
	}
	//resp := new(api.CommentActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentList
// @Summary 获取所有评论
// @Tags 评论
// @version 1.0
// @Param video_id query int true "视频id"
// @Param token query string true "token"
// @Success 200 object api.CommentListResponse 成功后返回值
// @Failure 409 object api.CommentListResponse 失败后返回值
// @Router /douyin/comment/list/ [get]
// @router /douyin/comment/list/ [get]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}
	value, exist := c.Get("accountID")
	if !exist {
		return
	}
	//authID, err := strconv.Atoi(c.Get("accountID"))

	resp, err := global.CommentClient.CommentList(ctx, &comment.CommentListRequest{
		AuthId: value.(int64),
		UserId: req.UserID,
	})
	if err != nil {
		return
	}
	//resp := new(api.CommentListResponse)

	c.JSON(consts.StatusOK, resp)
}
